# Isso configuration file
# vim: set filetype=ini

[general]

# file location to the SQLite3 database, highly recommended to change this
# location to a non-temporary location
dbpath = /tmp/comments.db

# required to dispatch multiple websites, not used otherwise.
name =

# URL to your website. When you start Isso, it will probe your website with a
# simple GET / request to see if it can reach the webserver. If this fails, Isso
# may not be able check if a web page exists, thus fails to accept new comments.
# You can supply more than one host:
# host =
#  http://localhost/
#  https://localhost/
host = http://localhost/

# time range that allows users to edit/remove their own comments.
# It supports years, weeks, days, hours, minutes, seconds.
# 3h45m12s equals to 3 hours, 45 minutes and 12 seconds.
max-age = 15m

# private session key to validate client cookies. If you restart the application
# several times per hour for whatever reason, use a fixed key.
session-key = ... ; python: binascii.b2a_hex(os.urandom(24))

# Select notification backend for new comments. Currently, only SMTP is
# available.
notify =


[moderation]
# enable comment moderation queue. This option only affects new comments.
# Comments in modertion queue are not visible to other users until you activate
# them.
enabled = false

# remove unprocessed comments in moderation queue after given time.
purge-after = 30d


[server]
# interface to listen on. Isso supports TCP/IP and unix domain sockets: UNIX
# domain socket listen = unix:///tmp/isso.sock TCP/IP listen =
# http:///localhost:1234/
#
# When gevent is available, it is automatically used for http:// Currently,
# gevent can not handle http requests on unix domain socket (see #295 and #299
# for details).  Does not apply for uWSGI.
listen = http://localhost:8080

# reload application, when the source code has changed. Useful for development
# (don't forget to use a fixed session-key). Only works when gevent and uwsgi
# are not available.
reload = off

# show 10 most time consuming function in Isso after each request. Do not use in
# production.
profile = off


[smtp]
# Isso can notify you on new comments via SMTP. In the email notification, you
# also can moderate (=activate or delete) comments.

# self-explanatory, optional
username =

# self-explanatory (yes, plain text, create a dedicated account for
# notifications), optional.
password =

# SMTP server
host = localhost

# SMTP port
port = 587

# use a secure connection to the server, possible values: "none", "starttls"
# or "ssl". Python 2.X probably does not validate certificates (needs
# research). But you should use a dedicated email account anyways.
security = starttls

# recipient address, e.g. your email address
to =

# sender address, e.g. isso@example.tld
from =


[guard]
# Enable basic spam protection features, e.g. rate-limit per IP address (/24 for
# IPv4, /48 for IPv6).

# enable guard, recommended in production. Not useful for debugging purposes.
enabled = true

# limit to N new comments per minute.
ratelimit = 2

# how many comments directly to the thread (prevent a simple while true; do curl
# ...; done.
direct-reply = 3

# allow commenters to reply to their own comments when they could still edit the
# comment. After the editing timeframe is gone, commenters can reply to their
# own comments anyways.  Do not forget to configure the client.
reply-to-self = false
